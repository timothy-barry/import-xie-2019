#########################################
# 0. Load data, packages, set directories
#########################################
library(magrittr)
xie_offsite <-.get_config_path("LOCAL_XIE_2019_DATA_DIR")
raw_data_dir <- paste0(xie_offsite, "raw/")
intermediate_file_dir <- paste0(xie_offsite, "intermediate/")
processed_data_dir <- paste0(xie_offsite, "processed/")
if (!dir.exists(processed_data_dir)) dir.create(processed_data_dir)
raw_data_dir
intermediate_file_dir
processed_data_dir
intermediate_file_dir
list.files(intermediate_file_dir)
#####################
# 1. create gRNA odms
#####################
# 1. ungrouped
ungrouped_gRNA_mat <- readRDS(paste0(intermediate_file_dir, "ungrouped_matrix.rds"))
dim(ungrouped_gRNA_mat)
ungrouped_gRNA_mat[1,]
y <- ungrouped_gRNA_mat[1,]
head(y)
y <- y[y >= 1]
y
length(y)
hist(y)
table(y)
y <- ungrouped_gRNA_mat[2,]
y <- y[y >= 1]
table(y)
y <- ungrouped_gRNA_mat[2,]
y <- y[y >= 1]
table(y)
hist(y)
sum(y >= 2)
sum(y >= 1)
y <- ungrouped_gRNA_mat[3,]
y <- y[y >= 1]
y
table(y)
sum(t >= 1)
sum(y >= 1)
head(ungrouped_gRNA_mat)
sum(ungrouped_gRNA_mat == 1)
s1 <- sum(ungrouped_gRNA_mat == 1)
sgt1 <- sum(ungrouped_gRNA_mat >= 2)
sgt1
s1
sgt1 <- sum(ungrouped_gRNA_mat >= 1)
sum(ungrouped_gRNA_mat == 1)/sum(ungrouped_gRNA_mat >= 1)
sum(ungrouped_gRNA_mat == %in% c(1,2))/sum(ungrouped_gRNA_mat >= 1)
sum(ungrouped_gRNA_mat %in% c(1,2))/sum(ungrouped_gRNA_mat >= 1)
sum(ungrouped_gRNA_mat <= 2)/sum(ungrouped_gRNA_mat >= 1)
sum(ungrouped_gRNA_mat == 1)/sum(ungrouped_gRNA_mat >= 1)
colnames(ungrouped_gRNA_mat)
row.names(ungrouped_gRNA_mat)
barcodes <- colnames(ungrouped_gRNA_mat)
barcodes
barcodes
spacer_seqs <- row.names(ungrouped_gRNA_mat)
length(spacer_seqs)
head(spacer_seqs)
y
length(y)
mean(y)
sum(y > 5)
xie_offsite <-.get_config_path("LOCAL_XIE_2019_DATA_DIR")
raw_data_dir <- paste0(xie_offsite, "raw/")
intermediate_file_dir <- paste0(xie_offsite, "intermediate/")
gRNA_matrix_list <- readRDS(paste0(intermediate_file_dir, "gRNA_matrix_list.rds"))
9
library(magrittr)
xie_offsite <- .get_config_path("LOCAL_XIE_2019_DATA_DIR")
intermediate_data_dir <- paste0(xie_offsite, "intermediate/")
raw_data_dir <- paste0(xie_offsite, "raw/")
aux_dir <- paste0(xie_offsite, "processed/aux/")
intermediate_data_dir
readRDS(paste0(intermediate_data_dir, "guide_seqs.rds")) %>% head()
# finally, add the spacer sequences to create the ungrouped pairs data frame
guide_seqs <- readRDS(paste0(intermediate_data_dir, "guide_seqs.rds"))
grouped_pairs <- pairs_plus %>% dplyr::rename("enh_region" = "gRNA_id")
library(magrittr)
xie_offsite <- .get_config_path("LOCAL_XIE_2019_DATA_DIR")
intermediate_data_dir <- paste0(xie_offsite, "intermediate/")
raw_data_dir <- paste0(xie_offsite, "raw/")
aux_dir <- paste0(xie_offsite, "processed/aux/")
# load the cis pairs
cis_pairs <- readRDS(paste0(intermediate_data_dir, "select_gRNA_gene_pair.rds")) %>%
dplyr::mutate(type = "cis")
# load the negative control pairs
neg_control_pairs <- readRDS(paste0(intermediate_data_dir, "neg_control_pair.rds")) %>%
dplyr::mutate(type = "neg_control")
neg_control_pairs$gene.hgnc.id <- NULL
# load the list of protein-coding genes, and gene names
gene_df <- openxlsx::read.xlsx(xlsxFile = paste0(raw_data_dir, "/Genes.xlsx"), sheet = 1)
all_protein_coding_genes <- gene_df$Gene_Symbol
h5_loc <- paste0(raw_data_dir, "GSM3722729_K562-dCas9-KRAB_5K-sgRNAs_Batch-1_1_filtered_gene_bc_matrices_h5.h5")
gene_id <- rhdf5::h5read(file = h5_loc, name = "/refgenome_hg38_CROP-Guide-MS2-2.1.0/genes")
gene_name <- rhdf5::h5read(file = h5_loc, name = "/refgenome_hg38_CROP-Guide-MS2-2.1.0/gene_names")
protein_coding <- gene_name %in% all_protein_coding_genes
extra_gene_info <- data.frame(gene_id = gene_id, gene_name = gene_name, protein_coding = protein_coding)
# combine, convert to factor
pairs <- rbind(cis_pairs, neg_control_pairs) %>%
dplyr::rename("gene_id" = "gene.id", "gRNA_id" = "gRNA.id")
pairs_plus <- dplyr::left_join(x = pairs, y = extra_gene_info, by = "gene_id") %>%
dplyr::mutate_at(.tbl = ., .vars = c("gene_id", "gRNA_id", "type", "gene_name"), .funs = factor)
saveRDS(object = pairs_plus, file = paste0(aux_dir, "pairs_grouped.rds"))
# finally, add the spacer sequences to create the ungrouped pairs data frame
guide_seqs <- readRDS(paste0(intermediate_data_dir, "guide_seqs.rds"))
grouped_pairs <- pairs_plus %>% dplyr::rename("enh_region" = "gRNA_id")
head(guide_seqs)
guide_seqs <- readRDS(paste0(intermediate_data_dir, "guide_seqs.rds")) %>%
dplyr::rename("enh_region" = "hg38_enh_region") %>% dplyr::mutate_all(factor)
grouped_pairs <- pairs_plus %>% dplyr::rename("enh_region" = "gRNA_id")
ungrouped_pairs <- dplyr::inner_join(x = grouped_pairs, y = guide_seqs, by = "enh_region") %>%
dplyr::rename("gRNA_id" = "spacer_sequence")
ungrouped_pairs <- dplyr::inner_join(x = grouped_pairs, y = guide_seqs, by = "enh_region")  %>% head()
dplyr::inner_join(x = grouped_pairs, y = guide_seqs, by = "enh_region")  %>% head()
ungrouped_pairs <- dplyr::inner_join(x = grouped_pairs, y = guide_seqs, by = "enh_region") %>%
dplyr::rename("gRNA_id" = "spacer_seq")
saveRDS(object = ungrouped_pairs, file = paste0(aux_dir, "pairs_ungrouped.rds"))
